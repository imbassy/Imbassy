// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3x4s7P8yWmfzeCC9Kkgod5
// Component: BTcsigXP038P0
import * as React from "react"
import * as p from "@plasmicapp/react-web"
import * as ph from "@plasmicapp/host"
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
} from "@plasmicapp/react-web"
import Navbar from "../../Navbar" // plasmic-import: jD-ij6xvvvU54/component
import Button from "../../Button" // plasmic-import: kGeIlWdAFyx5f/component
import Section from "../../Section" // plasmic-import: 0E4H5OYgwAESaW/component
import DiagramCard from "../../DiagramCard" // plasmic-import: reeIT8h8pGc4bh/component
import ProductCard from "../../ProductCard" // plasmic-import: rT24NJmUwG-Onr/component
import DetailAbout from "../../DetailAbout" // plasmic-import: T-Odw-VKLeNbYf/component
import PriceSection from "../../PriceSection" // plasmic-import: Nhk3oZa1CKg3O9/component
import PriceCard from "../../PriceCard" // plasmic-import: r6Ew0aWs1pwLGl/component
import FooterSection from "../../FooterSection" // plasmic-import: 6VHAP6clfrxQI_/component
import { useScreenVariants as useScreenVariantsfjHrDbfqgibjX } from "./PlasmicGlobalVariant__Screen" // plasmic-import: fj_HrDbfqgibjX/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css"
import * as projectcss from "./plasmic_dark_saa_s_landing_page.module.css" // plasmic-import: 3x4s7P8yWmfzeCC9Kkgod5/projectcss
import * as sty from "./PlasmicHomepage.module.css" // plasmic-import: BTcsigXP038P0/css
import IconArrowRightsvgIcon from "./icons/PlasmicIcon__IconArrowRightsvg" // plasmic-import: SsvBgcnRE4MXSC/icon
import diagramsvgIfuV3JvzSFdjP9 from "./images/diagramsvg.svg" // plasmic-import: IfuV3jvzSFdjP9/picture
import logoHero1PngJ0PpmWt1WipDam from "./images/logoHero1Png.png" // plasmic-import: j0ppmWt1WipDAM/picture
import logoHero2PngTGyfHkpDQtOhq5 from "./images/logoHero2Png.png" // plasmic-import: TGyfHkpDQtOHQ5/picture
import logoHero3Png08K4S8M8An9Fy from "./images/logoHero3Png.png" // plasmic-import: 0-8K4S8M8AN9Fy/picture
import logoHero4Png3UgywH2KcwGp9S from "./images/logoHero4Png.png" // plasmic-import: 3UgywH2KCWGp9S/picture
import diagramImgsvgYRYiroWgIxXU from "./images/diagramImgsvg.svg" // plasmic-import: yR-YiroWgIxX-U/picture
import ellipseLeftpng4OWqQZf2MEhQk from "./images/ellipseLeftpng.png" // plasmic-import: 4OWq-qZf2MEhQK/picture
import ellipseRightpngQ5OrU8N3JN3FtF from "./images/ellipseRightpng.png" // plasmic-import: Q5OrU8n3jN3FtF/picture
import terminalpngHjxHWsOQp725V from "./images/terminalpng.png" // plasmic-import: hjxHWsOQp725V-/picture
import line1PngNvkRh32Zmz1Gk from "./images/line1Png.png" // plasmic-import: NvkRh-32ZMZ1Gk/picture
import lineBranchpngDneWBcLs2VZy3X from "./images/lineBranchpng.png" // plasmic-import: dneWBcLS2vZY3X/picture
import line2PngYj6SYUs1Mz2Fy5 from "./images/line2Png.png" // plasmic-import: yj6sYUs1MZ2Fy5/picture
import dollarpngI8Kmo0Ps5GGYfh from "./images/dollarpng.png" // plasmic-import: I8KMO0PS5gGYfh/picture
import messagepngHWYaQAtZtY5Rz from "./images/messagepng.png" // plasmic-import: hWYaQAtZtY5-Rz/picture
import importpngIfKuO1IgkyaiK5 from "./images/importpng.png" // plasmic-import: ifKuO1igkyaiK5/picture
import exportpngKcQRbToazwNfL from "./images/exportpng.png" // plasmic-import: kcQRbTOAZW-NfL/picture
import message2PngV7IFrvh7Mcspg from "./images/message2Png.png" // plasmic-import: V7iFRVH7-mcspg/picture
import message3PngVn7ZLzvdW9FIvD from "./images/message3Png.png" // plasmic-import: VN7zLzvdW9fIvD/picture
import macbookpngFx85Hk84OWGFh from "./images/macbookpng.png" // plasmic-import: fx85HK84O-wGFh/picture
import galleri11PngLdzw9JaOq4BgM from "./images/galleri11Png.png" // plasmic-import: ldzw9-jaOq4BgM/picture
import galleri12PngSt7R3MuhzuTdlB from "./images/galleri12Png.png" // plasmic-import: st7r3MuhzuTdlB/picture
import galleri13PngJMgo6EvRiIr3Rv from "./images/galleri13Png.png" // plasmic-import: JMgo6evRiIR3RV/picture
import galleri21PngWWql0HQfsCSm4 from "./images/galleri21Png.png" // plasmic-import: wWQL-0HQfsCSm4/picture
import galleri22PngEuCmjjpLB84Vp from "./images/galleri22Png.png" // plasmic-import: euCMJJP-lB84Vp/picture
import galleri23PngJYg1Jl07XTRg8Y from "./images/galleri23Png.png" // plasmic-import: jYG1jl07xTRg8y/picture
import aboutImgpngZWWxnT7TguUtaF from "./images/aboutImgpng.png" // plasmic-import: zWWxnT7TGUUtaF/picture
import aboutIpsumpngORyRtrFxRzQouz from "./images/aboutIpsumpng.png" // plasmic-import: ORyRtrFXRzQOUZ/picture
import backtippngAeaKYrwpxMo59K from "./images/backtippng.png" // plasmic-import: AeaKYrwpxMO59K/picture
import arrowLeftpngBrxzXxUqZmK2 from "./images/arrowLeftpng.png" // plasmic-import: BRXZ_-XxUQZmK2/picture
import arrowRightpng2RjmntfftU1CPv from "./images/arrowRightpng2.png" // plasmic-import: rjmntfftU-1CPv/picture
import pricingImgsvgIxGxafRKv3Jm6P from "./images/pricingImgsvg.svg" // plasmic-import: IxGxafRKv3Jm6p/picture

export const PlasmicHomepage__VariantProps = new Array()

export const PlasmicHomepage__ArgProps = new Array()

export function Head() {
  return (
    <>
      <meta name="twitter:card" content="summary" />

      <title key="title">{"Home"}</title>

      <meta key="og:title" property="og:title" content={"Home"} />

      <meta key="twitter:title" name="twitter:title" content={"Home"} />
    </>
  )
}

function PlasmicHomepage__RenderFunc(props) {
  const { variants, overrides, forNode } = props
  const $ctx = ph.useDataEnv?.() || {}
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])
  const $props = args
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsfjHrDbfqgibjX(),
  })

  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        {(hasVariant(globalVariants, "screen", "mobileOnly") ? true : true) ? (
          <div
            data-plasmic-name={"root"}
            data-plasmic-override={overrides.root}
            data-plasmic-root={true}
            data-plasmic-for-node={forNode}
            className={classNames(
              projectcss.all,
              projectcss.root_reset,
              projectcss.plasmic_default_styles,
              projectcss.plasmic_mixins,
              projectcss.plasmic_tokens,
              sty.root
            )}
          >
            {true ? (
              <p.Stack
                as={"div"}
                data-plasmic-name={"headerHeroSection"}
                data-plasmic-override={overrides.headerHeroSection}
                hasGap={true}
                className={classNames(projectcss.all, sty.headerHeroSection)}
              >
                {true ? (
                  <Navbar
                    data-plasmic-name={"navbar"}
                    data-plasmic-override={overrides.navbar}
                    className={classNames("__wab_instance", sty.navbar)}
                  />
                ) : null}

                <div className={classNames(projectcss.all, sty.freeBox__rW0P)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__yteEk)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__a68XX)}
                    >
                      <h1
                        data-plasmic-name={"h1"}
                        data-plasmic-override={overrides.h1}
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "Analytics for developers can be better"
                          : "Analytics for \ndevelopers can\nbe better"}
                      </h1>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__zmNUl
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                          : "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."}
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___3C6V
                        )}
                      >
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__zhgIu
                          )}
                          color={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "blueSmall"
                              : "blue"
                          }
                          endIcon={
                            (
                              hasVariant(globalVariants, "screen", "mobileOnly")
                                ? true
                                : true
                            ) ? (
                              <IconArrowRightsvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__enUua
                                )}
                                role={"img"}
                              />
                            ) : null
                          }
                          link={"#"}
                          showEndIcon={true}
                          startIcon={
                            <svg
                              className={classNames(
                                projectcss.all,
                                sty.svg__btnxF
                              )}
                              role={"img"}
                            />
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hbxIa
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "Try Demo For Free"
                              : "Try Demo For Free"}
                          </div>
                        </Button>

                        {(
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? true
                            : true
                        ) ? (
                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.button__awNjz
                            )}
                            color={
                              hasVariant(globalVariants, "screen", "mobileOnly")
                                ? "blueBorderSmall"
                                : "blueBorder"
                            }
                            endIcon={
                              <svg
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__iTc4E
                                )}
                                role={"img"}
                              />
                            }
                            link={"#"}
                            startIcon={
                              <svg
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__zfL9I
                                )}
                                role={"img"}
                              />
                            }
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__gvwy0
                              )}
                            >
                              {hasVariant(
                                globalVariants,
                                "screen",
                                "mobileOnly"
                              )
                                ? "Learn More"
                                : "Learn More"}
                            </div>
                          </Button>
                        ) : null}
                      </p.Stack>

                      {(
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? true
                          : false
                      ) ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__d7Xiy
                          )}
                        >
                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.button__uhGjx
                            )}
                            color={"blueBorder"}
                            endIcon={
                              <svg
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__glkRe
                                )}
                                role={"img"}
                              />
                            }
                            startIcon={
                              <svg
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___0FaEf
                                )}
                                role={"img"}
                              />
                            }
                          >
                            {"Learn More"}
                          </Button>

                          {(
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? true
                              : true
                          ) ? (
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__wywqj
                              )}
                              color={"blueBorder"}
                              endIcon={
                                <svg
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__piFSe
                                  )}
                                  role={"img"}
                                />
                              }
                              startIcon={
                                <svg
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__n8Ao3
                                  )}
                                  role={"img"}
                                />
                              }
                            >
                              {"Learn More"}
                            </Button>
                          ) : null}
                        </div>
                      ) : null}
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__ep4SV)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img___18Ba)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"none"}
                        displayMinHeight={"0"}
                        displayMinWidth={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "0px"
                            : "661px"
                        }
                        displayWidth={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "100%"
                            : "100%"
                        }
                        loading={"lazy"}
                        src={{
                          src: diagramsvgIfuV3JvzSFdjP9,
                          fullWidth: 173,
                          fullHeight: 150,
                          aspectRatio: 1.151631,
                        }}
                      />
                    </div>
                  </p.Stack>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__q2TXo
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Powering with magnificant of Companies"
                      : "Powering with magnificant of Companies"}
                  </div>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__texXb)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__rvZ4)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "170px"
                          : "100%"
                      }
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: logoHero1PngJ0PpmWt1WipDam,
                        fullWidth: 233,
                        fullHeight: 50,
                        aspectRatio: undefined,
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__pf41H)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "170px"
                          : "100%"
                      }
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: logoHero2PngTGyfHkpDQtOhq5,
                        fullWidth: 189,
                        fullHeight: 50,
                        aspectRatio: undefined,
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__wZIsp)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "170px"
                          : "100%"
                      }
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: logoHero3Png08K4S8M8An9Fy,
                        fullWidth: 194,
                        fullHeight: 50,
                        aspectRatio: undefined,
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__lIle)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "170px"
                          : "100%"
                      }
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: logoHero4Png3UgywH2KcwGp9S,
                        fullWidth: 189,
                        fullHeight: 50,
                        aspectRatio: undefined,
                      }}
                    />
                  </p.Stack>
                </div>
              </p.Stack>
            ) : null}

            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__nqeP)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: diagramImgsvgYRYiroWgIxXU,
                fullWidth: 300,
                fullHeight: 100,
                aspectRatio: 2.987552,
              }}
            />

            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img___7DtSw)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"774px"}
              loading={"lazy"}
              src={{
                src: ellipseLeftpng4OWqQZf2MEhQk,
                fullWidth: 469,
                fullHeight: 742,
                aspectRatio: undefined,
              }}
            />

            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__ewtay)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: ellipseRightpngQ5OrU8N3JN3FtF,
                fullWidth: 437,
                fullHeight: 742,
                aspectRatio: undefined,
              }}
            />

            <Section
              data-plasmic-name={"diagramSection"}
              data-plasmic-override={overrides.diagramSection}
              className={classNames("__wab_instance", sty.diagramSection)}
              size={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "mobile"
                  : undefined
              }
            >
              <div className={classNames(projectcss.all, sty.freeBox__dxMxo)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__r0BCg
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Lorem ipsum dolor \nsit amet"
                    : "Lorem ipsum dolor \nsit amet"}
                </h2>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wvc6T
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                    : "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."}
                </div>

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__pmFj8)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "249px"
                      : "100%"
                  }
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: terminalpngHjxHWsOQp725V,
                    fullWidth: 624,
                    fullHeight: 333,
                    aspectRatio: undefined,
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__bNsDo)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "auto"
                      : "auto"
                  }
                  loading={"lazy"}
                  src={{
                    src: line1PngNvkRh32Zmz1Gk,
                    fullWidth: 11,
                    fullHeight: 150,
                    aspectRatio: undefined,
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__lStZ5)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "50px"
                      : "100%"
                  }
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: lineBranchpngDneWBcLs2VZy3X,
                    fullWidth: 100,
                    fullHeight: 100,
                    aspectRatio: undefined,
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__y5Wm6)}
                  displayHeight={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "auto"
                      : "auto"
                  }
                  displayMaxHeight={"none"}
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "500px"
                      : "770px"
                  }
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "auto"
                      : "auto"
                  }
                  loading={"lazy"}
                  src={{
                    src: line2PngYj6SYUs1Mz2Fy5,
                    fullWidth: 844,
                    fullHeight: 284,
                    aspectRatio: undefined,
                  }}
                />

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__njr9)}
                >
                  <DiagramCard
                    className={classNames(
                      "__wab_instance",
                      sty.diagramCard__c2Vdh
                    )}
                  />

                  <DiagramCard
                    className={classNames(
                      "__wab_instance",
                      sty.diagramCard__idEgk
                    )}
                  />

                  <DiagramCard
                    className={classNames(
                      "__wab_instance",
                      sty.diagramCard__zcUit
                    )}
                  />
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___71KXv)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__nfJqL)}
                    displayHeight={"auto"}
                    displayMaxHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "72px"
                        : "none"
                    }
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "72px"
                        : "100%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: dollarpngI8Kmo0Ps5GGYfh,
                      fullWidth: 100,
                      fullHeight: 100,
                      aspectRatio: undefined,
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___8WN8)}
                    displayHeight={"auto"}
                    displayMaxHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "72px"
                        : "none"
                    }
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "72px"
                        : "100%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: messagepngHWYaQAtZtY5Rz,
                      fullWidth: 100,
                      fullHeight: 100,
                      aspectRatio: undefined,
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__jIK8)}
                    displayHeight={"auto"}
                    displayMaxHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "72px"
                        : "none"
                    }
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "72px"
                        : "100%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: importpngIfKuO1IgkyaiK5,
                      fullWidth: 100,
                      fullHeight: 100,
                      aspectRatio: undefined,
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___9Oyu8)}
                    displayHeight={"auto"}
                    displayMaxHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "72px"
                        : "none"
                    }
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "72px"
                        : "100%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: lineBranchpngDneWBcLs2VZy3X,
                      fullWidth: 100,
                      fullHeight: 100,
                      aspectRatio: undefined,
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__kErW)}
                    displayHeight={"auto"}
                    displayMaxHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "72px"
                        : "none"
                    }
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "72px"
                        : "100%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: exportpngKcQRbToazwNfL,
                      fullWidth: 100,
                      fullHeight: 100,
                      aspectRatio: undefined,
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__zHyCi)}
                    displayHeight={"auto"}
                    displayMaxHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "72px"
                        : "none"
                    }
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "72px"
                        : "100%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: message2PngV7IFrvh7Mcspg,
                      fullWidth: 100,
                      fullHeight: 100,
                      aspectRatio: undefined,
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__i4Fy6)}
                    displayHeight={"auto"}
                    displayMaxHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "72px"
                        : "none"
                    }
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "72px"
                        : "100%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: message3PngVn7ZLzvdW9FIvD,
                      fullWidth: 100,
                      fullHeight: 100,
                      aspectRatio: undefined,
                    }}
                  />
                </p.Stack>

                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__uQJv
                  )}
                >
                  {"Lorem ipsum dolor \nsit amet"}
                </h2>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__i4TpN
                  )}
                >
                  {
                    "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                  }
                </div>
              </div>
            </Section>

            <Section
              data-plasmic-name={"deviceSection"}
              data-plasmic-override={overrides.deviceSection}
              background={"dark"}
              className={classNames("__wab_instance", sty.deviceSection)}
              size={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "mobile"
                  : undefined
              }
            >
              <div className={classNames(projectcss.all, sty.freeBox__vi1VN)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__kls3A
                  )}
                >
                  {"Lorem ipsum dolor sit amet"}
                </h2>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__d8Nt4
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \neiusmod tempor incididunt ut labore et dolore magna aliqua."
                    : "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \neiusmod tempor incididunt ut labore et dolore magna aliqua."}
                </div>
              </div>

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img___4XPJm)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "360px"
                    : "100%"
                }
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: macbookpngFx85Hk84OWGFh,
                  fullWidth: 900,
                  fullHeight: 565,
                  aspectRatio: undefined,
                }}
              />
            </Section>

            <Section
              data-plasmic-name={"gallerySection"}
              data-plasmic-override={overrides.gallerySection}
              className={classNames("__wab_instance", sty.gallerySection)}
              size={"fullContentGallery"}
            >
              <div className={classNames(projectcss.all, sty.freeBox__xqHje)}>
                <div className={classNames(projectcss.all, sty.columns___6HjF)}>
                  <div
                    className={classNames(projectcss.all, sty.column__udlb3)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__hdKy4)}
                      displayHeight={"100%"}
                      displayMaxHeight={"300px"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: galleri11PngLdzw9JaOq4BgM,
                        fullWidth: 700,
                        fullHeight: 300,
                        aspectRatio: undefined,
                      }}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__zUzam)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__l7RUx)}
                      displayHeight={"100%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: galleri12PngSt7R3MuhzuTdlB,
                        fullWidth: 700,
                        fullHeight: 300,
                        aspectRatio: undefined,
                      }}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__d1Ond)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__eanvt)}
                      displayHeight={"100%"}
                      displayMaxHeight={"300px"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: galleri13PngJMgo6EvRiIr3Rv,
                        fullWidth: 700,
                        fullHeight: 300,
                        aspectRatio: undefined,
                      }}
                    />
                  </div>
                </div>

                <div
                  className={classNames(projectcss.all, sty.columns___6C9Tq)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__lKaVz)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__ygAhV)}
                      displayHeight={"100%"}
                      displayMaxHeight={"300px"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: galleri21PngWWql0HQfsCSm4,
                        fullWidth: 700,
                        fullHeight: 300,
                        aspectRatio: undefined,
                      }}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__f2IJu)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__em786)}
                      displayHeight={"100%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: galleri22PngEuCmjjpLB84Vp,
                        fullWidth: 700,
                        fullHeight: 300,
                        aspectRatio: undefined,
                      }}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__ydWkB)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__oXfX)}
                      displayHeight={"100%"}
                      displayMaxHeight={"300px"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: galleri23PngJYg1Jl07XTRg8Y,
                        fullWidth: 700,
                        fullHeight: 300,
                        aspectRatio: undefined,
                      }}
                    />
                  </div>
                </div>
              </div>
            </Section>

            <Section
              data-plasmic-name={"productSection"}
              data-plasmic-override={overrides.productSection}
              className={classNames("__wab_instance", sty.productSection)}
              size={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "mobile"
                  : undefined
              }
            >
              <div className={classNames(projectcss.all, sty.freeBox__hi7S)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__kvyvV
                  )}
                >
                  {"Lorem ipsum dolor sit amet"}
                </h2>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__klY5K
                  )}
                >
                  {
                    "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \neiusmod tempor incididunt ut labore et dolore magna aliqua."
                  }
                </div>

                <Button
                  className={classNames("__wab_instance", sty.button___4Azr0)}
                  color={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "blue"
                      : "blue"
                  }
                  endIcon={
                    <svg
                      className={classNames(projectcss.all, sty.svg__vgJuY)}
                      role={"img"}
                    />
                  }
                  link={"#"}
                  startIcon={
                    <svg
                      className={classNames(projectcss.all, sty.svg___0LcJt)}
                      role={"img"}
                    />
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__q8Yw8
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Get Started"
                      : "Get Started"}
                  </div>
                </Button>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ffnpO)}
                >
                  <ProductCard
                    className={classNames(
                      "__wab_instance",
                      sty.productCard___0Ya8F
                    )}
                  />

                  <ProductCard
                    className={classNames(
                      "__wab_instance",
                      sty.productCard__oifMy
                    )}
                  />
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__iZi5O)}
                >
                  <ProductCard
                    className={classNames(
                      "__wab_instance",
                      sty.productCard__xzuMy
                    )}
                  />

                  <ProductCard
                    className={classNames(
                      "__wab_instance",
                      sty.productCard__rIr1
                    )}
                  />
                </p.Stack>
              </div>
            </Section>

            <Section
              data-plasmic-name={"aboutSection"}
              data-plasmic-override={overrides.aboutSection}
              background={"dark"}
              className={classNames("__wab_instance", sty.aboutSection)}
              size={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "mobile"
                  : undefined
              }
            >
              <div className={classNames(projectcss.all, sty.freeBox__xaQy)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__afyyE
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "What people say \nabout us"
                    : "What people say about us"}
                </h2>

                <div className={classNames(projectcss.all, sty.freeBox__vFmZj)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__raGXq)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__w8Q31)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "339px"
                          : "100%"
                      }
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: aboutImgpngZWWxnT7TguUtaF,
                        fullWidth: 400,
                        fullHeight: 500,
                        aspectRatio: undefined,
                      }}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__hdFEc)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__zIvE
                      )}
                    >
                      {"Michael Justin"}
                    </h2>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__esAg)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__l99Is)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: aboutIpsumpngORyRtrFxRzQouz,
                          fullWidth: 152,
                          fullHeight: 40,
                          aspectRatio: undefined,
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__p3T6D
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "CEO Company"
                          : "CEO Company"}
                      </div>
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__pcd2O)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__wrO9)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "auto"
                            : "auto"
                        }
                        loading={"lazy"}
                        src={{
                          src: backtippngAeaKYrwpxMo59K,
                          fullWidth: 34,
                          fullHeight: 32,
                          aspectRatio: undefined,
                        }}
                      />
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ftKgs
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                        : "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."}
                    </div>
                  </div>
                </div>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__cT8RQ)}
                >
                  <DetailAbout
                    className={classNames(
                      "__wab_instance",
                      sty.detailAbout__hqJpU
                    )}
                  />

                  <DetailAbout
                    className={classNames(
                      "__wab_instance",
                      sty.detailAbout__bcxtd
                    )}
                  />

                  <DetailAbout
                    className={classNames(
                      "__wab_instance",
                      sty.detailAbout__a2ZrA
                    )}
                  />
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__nuaRh)}
                >
                  <DetailAbout
                    className={classNames(
                      "__wab_instance",
                      sty.detailAbout__nkC9T
                    )}
                  />

                  <DetailAbout
                    className={classNames(
                      "__wab_instance",
                      sty.detailAbout__xqQze
                    )}
                  />

                  <DetailAbout
                    className={classNames(
                      "__wab_instance",
                      sty.detailAbout___7Phf7
                    )}
                  />
                </p.Stack>

                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : true
                ) ? (
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___67HyN)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: arrowLeftpngBrxzXxUqZmK2,
                      fullWidth: 24,
                      fullHeight: 24,
                      aspectRatio: undefined,
                    }}
                  />
                ) : null}

                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : true
                ) ? (
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__dq8G)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: arrowRightpng2RjmntfftU1CPv,
                      fullWidth: 24,
                      fullHeight: 24,
                      aspectRatio: undefined,
                    }}
                  />
                ) : null}
              </div>
            </Section>

            {true ? (
              <PriceSection
                data-plasmic-name={"priceSection"}
                data-plasmic-override={overrides.priceSection}
                className={classNames("__wab_instance", sty.priceSection)}
              />
            ) : null}

            <Section
              data-plasmic-name={"startSection"}
              data-plasmic-override={overrides.startSection}
              className={classNames("__wab_instance", sty.startSection)}
              size={"fullContentWidth"}
            >
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__cS9An)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ssFwE)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: pricingImgsvgIxGxafRKv3Jm6P,
                      fullWidth: 300,
                      fullHeight: 67,
                      aspectRatio: 4.468401,
                    }}
                  />

                  <div
                    className={classNames(projectcss.all, sty.columns___745W9)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__sscGj)}
                    >
                      <h3
                        data-plasmic-name={"h3"}
                        data-plasmic-override={overrides.h3}
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "Start using our product today"
                          : "Start using our product today"}
                      </h3>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__aAhzz
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "Faster than free analytics tools. Access to all your data, with respect to the privacy of your users."
                          : "Faster than free analytics tools. Access to all your data, with respect to the privacy of your users."}
                      </div>
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__nsJiy)}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__ystys
                        )}
                        color={"white"}
                        endIcon={
                          <svg
                            className={classNames(
                              projectcss.all,
                              sty.svg__x9Kt
                            )}
                            role={"img"}
                          />
                        }
                        link={"#"}
                        startIcon={
                          <svg
                            className={classNames(
                              projectcss.all,
                              sty.svg__pQUuf
                            )}
                            role={"img"}
                          />
                        }
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__rcw5D
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "Get Started"
                            : "Get Started"}
                        </div>
                      </Button>
                    </div>
                  </div>
                </div>
              ) : null}
            </Section>

            {true ? (
              <Section
                data-plasmic-name={"pricingSection"}
                data-plasmic-override={overrides.pricingSection}
                className={classNames("__wab_instance", sty.pricingSection)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__peThr)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.columns__xyDdU)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__an1Ow)}
                    >
                      <PriceCard
                        borders={["flatLeft"]}
                        className={classNames(
                          "__wab_instance",
                          sty.priceCard___1S7Ka
                        )}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__sRnRr)}
                    >
                      <PriceCard
                        borders={["flatCenter"]}
                        className={classNames(
                          "__wab_instance",
                          sty.priceCard__e8MYl
                        )}
                      />

                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__uwl8
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__pv5KT
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "We Recommended"
                              : "We Recommended"}
                          </div>
                        </div>
                      ) : null}
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__if2Gk)}
                    >
                      <PriceCard
                        borders={["flatRight"]}
                        className={classNames(
                          "__wab_instance",
                          sty.priceCard___8VYLl
                        )}
                      />
                    </div>
                  </p.Stack>
                </div>
              </Section>
            ) : null}

            {true ? (
              <FooterSection
                data-plasmic-name={"footerSection"}
                data-plasmic-override={overrides.footerSection}
                className={classNames("__wab_instance", sty.footerSection)}
              />
            ) : null}
          </div>
        ) : null}
      </div>
    </React.Fragment>
  )
}

const PlasmicDescendants = {
  root: [
    "root",
    "headerHeroSection",
    "navbar",
    "h1",
    "diagramSection",
    "deviceSection",
    "gallerySection",
    "productSection",
    "aboutSection",
    "priceSection",
    "startSection",
    "h3",
    "pricingSection",
    "footerSection",
  ],

  headerHeroSection: ["headerHeroSection", "navbar", "h1"],
  navbar: ["navbar"],
  h1: ["h1"],
  diagramSection: ["diagramSection"],
  deviceSection: ["deviceSection"],
  gallerySection: ["gallerySection"],
  productSection: ["productSection"],
  aboutSection: ["aboutSection"],
  priceSection: ["priceSection"],
  startSection: ["startSection", "h3"],
  h3: ["h3"],
  pricingSection: ["pricingSection"],
  footerSection: ["footerSection"],
}

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps,
        }),

      [props, nodeName]
    )

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName,
    })
  }
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage"
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`
  }
  return func
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    headerHeroSection: makeNodeComponent("headerHeroSection"),
    navbar: makeNodeComponent("navbar"),
    h1: makeNodeComponent("h1"),
    diagramSection: makeNodeComponent("diagramSection"),
    deviceSection: makeNodeComponent("deviceSection"),
    gallerySection: makeNodeComponent("gallerySection"),
    productSection: makeNodeComponent("productSection"),
    aboutSection: makeNodeComponent("aboutSection"),
    priceSection: makeNodeComponent("priceSection"),
    startSection: makeNodeComponent("startSection"),
    h3: makeNodeComponent("h3"),
    pricingSection: makeNodeComponent("pricingSection"),
    footerSection: makeNodeComponent("footerSection"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,
  }
)

export default PlasmicHomepage
/* prettier-ignore-end */
